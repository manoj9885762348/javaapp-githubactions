name: CI/CD Pipeline for Java Project

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: [self-hosted, runner]
    name: Test on EC2
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '11'

      - name: Install dependencies
        run: ./mvnw install

      - name: Run tests
        run: ./mvnw test

  sonar_analysis:
    needs: test
    runs-on: [self-hosted, runner]
    name: SonarQube Analysis
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          java-version: '11'

      - name: SonarQube Scanner
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_LOGIN: ${{ secrets.SONAR_LOGIN }}
        run: ./mvnw sonar:sonar -Dsonar.projectKey=my_project_key -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} -Dsonar.login=${{ secrets.SONAR_LOGIN }}

  deploy:
    needs: sonar_analysis
    runs-on: [self-hosted, runner]
    environment: production
    name: Deploy to EC2
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no ec2-user@54.224.225.171 << 'EOF'
            cd /path/to/your/application
            git pull origin main
            ./mvnw clean package
            ./mvnw deploy
            sudo systemctl restart your-service-name
          EOF

      - name: Notify deployment
        run: echo "Deployment to EC2 environment successful!"
